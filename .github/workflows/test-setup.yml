name: Test Newsletter Setup

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'requirements.txt'

jobs:
  test-setup:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create directories
      run: |
        mkdir -p logs output
        
    - name: Test environment setup
      run: |
        echo "DRY_RUN=true" >> $GITHUB_ENV
        python tests/test_environment.py
        
    - name: Test basic collection
      run: |
        python test_simple_collection.py
        
    - name: Test complete pipeline (dry run)
      run: |
        export DRY_RUN=true
        python test_complete_pipeline.py
        
    - name: Validate workflow files
      run: |
        echo "âœ… Checking workflow files..."
        ls -la .github/workflows/
        
        echo "âœ… Checking project structure..."
        ls -la src/
        
        echo "âœ… Checking configuration..."
        python -c "from src.config import Config; print('Config loaded successfully')"
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          output/*.html
          logs/*.log
        retention-days: 7
        
    - name: Test summary
      if: always()
      run: |
        echo "## Test Setup Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Python Version**: $(python --version)" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependencies**: âœ… Installed" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: âœ… Configured" >> $GITHUB_STEP_SUMMARY
        echo "- **Pipeline Test**: âœ… Completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Ready for production!** ðŸš€" >> $GITHUB_STEP_SUMMARY
